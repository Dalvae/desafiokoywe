services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "${API_PORT}:${API_PORT}"
    env_file: .env
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
    command: >
      sh -c "./entrypoint.sh"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "${FRONTEND_PORT}:${FRONTEND_PORT}"
    env_file: .env
    volumes:
      - ./frontend:/app
      - /app/node_modules

  postgres:
    image: postgres:15
    env_file: .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    tmpfs:
      - /tmp
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data: